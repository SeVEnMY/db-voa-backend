-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-04-26 11:59:16 EDT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE nqz_acc_role (
    acc_id NUMBER(5) NOT NULL,
    r_id   NUMBER(4) NOT NULL
);

ALTER TABLE nqz_acc_role ADD CONSTRAINT nqz_acc_role_pk PRIMARY KEY ( acc_id,
                                                                      r_id );

CREATE TABLE nqz_account (
    acc_id    NUMBER(5) NOT NULL,
    acc_email VARCHAR2(30) NOT NULL,
    acc_pwd   VARCHAR2(50) NOT NULL,
    v_id      NUMBER(5) NOT NULL
);

ALTER TABLE nqz_account ADD CONSTRAINT nqz_account_pk PRIMARY KEY ( acc_id );

CREATE TABLE nqz_att_type ( 
--  attraction type ID
    atttype_id   NUMBER(4) NOT NULL, 
--  attraction type can be roller coaster, water ride, dark ride, kid ride etc
    atttype_name VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN nqz_att_type.atttype_id IS
    'attraction type ID';

COMMENT ON COLUMN nqz_att_type.atttype_name IS
    'attraction type can be roller coaster, water ride, dark ride, kid ride etc';

ALTER TABLE nqz_att_type ADD CONSTRAINT nqz_att_type_pk PRIMARY KEY ( atttype_id );

CREATE TABLE nqz_attraction ( 
--  attraction ID
    att_id             NUMBER(5) NOT NULL, 
--  attraction name
    att_name           VARCHAR2(20) NOT NULL, 
--  attraction description
    att_description    VARCHAR2(200) NOT NULL, 
--  status can be open, closed or under maintenance
    att_status         VARCHAR2(20) NOT NULL, 
--  attraction capacity
    att_capacity       NUMBER(5) NOT NULL, 
--  attraction minimum height limit
    att_minimum_height NUMBER(3), 
--  attraction duration time in seconds
    att_duration_time  NUMBER(5) NOT NULL, 
--  location section id fk
    ls_id              NUMBER(4) NOT NULL, 
--  attraction type id fk
    atttype_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_attraction.att_id IS
    'attraction ID';

COMMENT ON COLUMN nqz_attraction.att_name IS
    'attraction name';

COMMENT ON COLUMN nqz_attraction.att_description IS
    'attraction description';

COMMENT ON COLUMN nqz_attraction.att_status IS
    'status can be open, closed or under maintenance';

COMMENT ON COLUMN nqz_attraction.att_capacity IS
    'attraction capacity';

COMMENT ON COLUMN nqz_attraction.att_minimum_height IS
    'attraction minimum height limit';

COMMENT ON COLUMN nqz_attraction.att_duration_time IS
    'attraction duration time in seconds';

COMMENT ON COLUMN nqz_attraction.ls_id IS
    'location section id fk';

COMMENT ON COLUMN nqz_attraction.atttype_id IS
    'attraction type id fk';

ALTER TABLE nqz_attraction ADD CONSTRAINT nqz_attraction_pk PRIMARY KEY ( att_id );

CREATE TABLE nqz_cash ( 
--  payment id
    pay_id    NUMBER(5) NOT NULL, 
--  amount of change
    ca_change NUMBER(2) NOT NULL
);

COMMENT ON COLUMN nqz_cash.pay_id IS
    'payment id';

COMMENT ON COLUMN nqz_cash.ca_change IS
    'amount of change';

ALTER TABLE nqz_cash ADD CONSTRAINT nqz_cash_pk PRIMARY KEY ( pay_id );

CREATE TABLE nqz_category ( 
--  category ID
    ctg_id   NUMBER(4) NOT NULL, 
--  category name can be Food stall, Ice cream parlor, Restaurant, Gift Shop or
--  Apparels
    ctg_name VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN nqz_category.ctg_id IS
    'category ID';

COMMENT ON COLUMN nqz_category.ctg_name IS
    'category name can be Food stall, Ice cream parlor, Restaurant, Gift Shop or Apparels';

ALTER TABLE nqz_category ADD CONSTRAINT nqz_category_pk PRIMARY KEY ( ctg_id );

CREATE TABLE nqz_credit_debit ( 
--  payment id
    pay_id    NUMBER(5) NOT NULL, 
--  name on card
    cd_name   VARCHAR2(15) NOT NULL, 
--  card number
    cd_num    VARCHAR2(20) NOT NULL, 
--  card expiration date
    cd_exdate DATE NOT NULL, 
--  card CVV
    cd_cvv    VARCHAR2(3) NOT NULL, 
--  credit or debit
    cd_credit NUMBER NOT NULL
);

COMMENT ON COLUMN nqz_credit_debit.pay_id IS
    'payment id';

COMMENT ON COLUMN nqz_credit_debit.cd_name IS
    'name on card';

COMMENT ON COLUMN nqz_credit_debit.cd_num IS
    'card number';

COMMENT ON COLUMN nqz_credit_debit.cd_exdate IS
    'card expiration date';

COMMENT ON COLUMN nqz_credit_debit.cd_cvv IS
    'card CVV';

COMMENT ON COLUMN nqz_credit_debit.cd_credit IS
    'credit or debit';

ALTER TABLE nqz_credit_debit ADD CONSTRAINT nqz_credit_debit_pk PRIMARY KEY ( pay_id );

CREATE TABLE nqz_group ( 
--  visitor ID
    v_id   NUMBER(5) NOT NULL, 
--  group size
    g_size NUMBER(5) NOT NULL
);

COMMENT ON COLUMN nqz_group.v_id IS
    'visitor ID';

COMMENT ON COLUMN nqz_group.g_size IS
    'group size';

ALTER TABLE nqz_group ADD CONSTRAINT nqz_group_pk PRIMARY KEY ( v_id );

CREATE TABLE nqz_individual ( 
--  visitor ID
    v_id          NUMBER(5) NOT NULL, 
--  times of visit
    i_times_visit NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_individual.v_id IS
    'visitor ID';

COMMENT ON COLUMN nqz_individual.i_times_visit IS
    'times of visit';

ALTER TABLE nqz_individual ADD CONSTRAINT nqz_individual_pk PRIMARY KEY ( v_id );

CREATE TABLE nqz_location_section ( 
--  location section ID
    ls_id   NUMBER(4) NOT NULL, 
--  location section can be Lot A, Lot B, Lot C, Lot D etc
    ls_name VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN nqz_location_section.ls_id IS
    'location section ID';

COMMENT ON COLUMN nqz_location_section.ls_name IS
    'location section can be Lot A, Lot B, Lot C, Lot D etc';

ALTER TABLE nqz_location_section ADD CONSTRAINT nqz_location_section_pk PRIMARY KEY ( ls_id );

CREATE TABLE nqz_member ( 
--  visitor ID
    v_id            NUMBER(5) NOT NULL, 
--  membership start date
    m_startdate     DATE NOT NULL, 
--  membership end date
    m_enddate       DATE NOT NULL, 
--  number of tickets purchased
    m_num_purchased NUMBER(2) NOT NULL
);

COMMENT ON COLUMN nqz_member.v_id IS
    'visitor ID';

COMMENT ON COLUMN nqz_member.m_startdate IS
    'membership start date';

COMMENT ON COLUMN nqz_member.m_enddate IS
    'membership end date';

COMMENT ON COLUMN nqz_member.m_num_purchased IS
    'number of tickets purchased';

ALTER TABLE nqz_member ADD CONSTRAINT nqz_member_pk PRIMARY KEY ( v_id );

CREATE TABLE nqz_menu_item ( 
--  menu item ID
    mi_id         NUMBER(4) NOT NULL, 
--  menu item name
    mi_name       VARCHAR2(30) NOT NULL, 
--  menu item unit price
    mi_unit_price NUMBER(5) NOT NULL
);

COMMENT ON COLUMN nqz_menu_item.mi_id IS
    'menu item ID';

COMMENT ON COLUMN nqz_menu_item.mi_name IS
    'menu item name';

COMMENT ON COLUMN nqz_menu_item.mi_unit_price IS
    'menu item unit price';

ALTER TABLE nqz_menu_item ADD CONSTRAINT nqz_menu_item_pk PRIMARY KEY ( mi_id );

CREATE TABLE nqz_order ( 
--  order ID
    o_id       NUMBER(5) NOT NULL, 
--  order date
    o_date     DATE NOT NULL, 
--  order quantity
    o_quantity NUMBER(5) NOT NULL, 
--  order amount
    o_amount   NUMBER(15) NOT NULL, 
--  show id fk
    sh_id      NUMBER(5), 
--  visitor id fk
    v_id       NUMBER(5) NOT NULL, 
--  payment id fk
    pay_id     NUMBER(5), 
--  store id fk
    st_id      NUMBER(5), 
--  menu item id fk
    mi_id      NUMBER(4), 
--  ticket id fk
    tkt_id     NUMBER(5), 
--  parking id fk
    park_id    NUMBER(5)
);

COMMENT ON COLUMN nqz_order.o_id IS
    'order ID';

COMMENT ON COLUMN nqz_order.o_date IS
    'order date';

COMMENT ON COLUMN nqz_order.o_quantity IS
    'order quantity';

COMMENT ON COLUMN nqz_order.o_amount IS
    'order amount';

COMMENT ON COLUMN nqz_order.sh_id IS
    'show id fk';

COMMENT ON COLUMN nqz_order.v_id IS
    'visitor id fk';

COMMENT ON COLUMN nqz_order.pay_id IS
    'payment id fk';

COMMENT ON COLUMN nqz_order.st_id IS
    'store id fk';

COMMENT ON COLUMN nqz_order.mi_id IS
    'menu item id fk';

COMMENT ON COLUMN nqz_order.tkt_id IS
    'ticket id fk';

COMMENT ON COLUMN nqz_order.park_id IS
    'parking id fk';

CREATE INDEX nqz_order__idx ON
    nqz_order (
        o_id
    ASC );

ALTER TABLE nqz_order ADD CONSTRAINT nqz_order_pk PRIMARY KEY ( o_id );

CREATE TABLE nqz_parking ( 
--  parking ID
    park_id       NUMBER(5) NOT NULL, 
--  parking time in
    park_time_in  DATE NOT NULL, 
--  parking time out
    park_time_out DATE NOT NULL, 
--  parking fee for 1 hour
    park_fee      NUMBER(5) NOT NULL, 
--  parking spot number
    park_spotno   NUMBER(4) NOT NULL, 
--  parking lot id fk
    pl_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_parking.park_id IS
    'parking ID';

COMMENT ON COLUMN nqz_parking.park_time_in IS
    'parking time in';

COMMENT ON COLUMN nqz_parking.park_time_out IS
    'parking time out';

COMMENT ON COLUMN nqz_parking.park_fee IS
    'parking fee for 1 hour';

COMMENT ON COLUMN nqz_parking.park_spotno IS
    'parking spot number';

COMMENT ON COLUMN nqz_parking.pl_id IS
    'parking lot id fk';

ALTER TABLE nqz_parking ADD CONSTRAINT nqz_parking_pk PRIMARY KEY ( park_id );

CREATE TABLE nqz_parking_lot ( 
--  parking lot ID
    pl_id   NUMBER(4) NOT NULL, 
--  parking lot name
    pl_name VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN nqz_parking_lot.pl_id IS
    'parking lot ID';

COMMENT ON COLUMN nqz_parking_lot.pl_name IS
    'parking lot name';

ALTER TABLE nqz_parking_lot ADD CONSTRAINT nqz_parking_lot_pk PRIMARY KEY ( pl_id );

CREATE TABLE nqz_payment ( 
--  payment id
    pay_id     NUMBER(5) NOT NULL, 
--  payment time
    pay_time   DATE NOT NULL, 
--  payment amount
    pay_amount NUMBER(20) NOT NULL, 
--  method can be "CA" or "CD"
    pay_method VARCHAR2(11) NOT NULL
);

ALTER TABLE nqz_payment
    ADD CONSTRAINT ch_inh_nqz_payment CHECK ( pay_method IN ( 'CA', 'CD', 'NQZ_PAYMENT' ) );

COMMENT ON COLUMN nqz_payment.pay_id IS
    'payment id';

COMMENT ON COLUMN nqz_payment.pay_time IS
    'payment time';

COMMENT ON COLUMN nqz_payment.pay_amount IS
    'payment amount';

COMMENT ON COLUMN nqz_payment.pay_method IS
    'method can be "CA" or "CD"';

ALTER TABLE nqz_payment ADD CONSTRAINT nqz_payment_pk PRIMARY KEY ( pay_id );

CREATE TABLE nqz_role (
    r_id   NUMBER(4) NOT NULL,
    r_name VARCHAR2(10) NOT NULL
);

ALTER TABLE nqz_role ADD CONSTRAINT nqz_role_pk PRIMARY KEY ( r_id );

CREATE TABLE nqz_sh_type ( 
--  show type ID
    shtype_id   NUMBER(4) NOT NULL, 
--  show type can be drama, musical, comedy, horror or adventure
    shtype_name VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN nqz_sh_type.shtype_id IS
    'show type ID';

COMMENT ON COLUMN nqz_sh_type.shtype_name IS
    'show type can be drama, musical, comedy, horror or adventure';

ALTER TABLE nqz_sh_type ADD CONSTRAINT nqz_sh_type_pk PRIMARY KEY ( shtype_id );

CREATE TABLE nqz_show ( 
--  show ID
    sh_id             NUMBER(5) NOT NULL, 
--  show name
    sh_name           VARCHAR2(30) NOT NULL, 
--  show description
    sh_description    VARCHAR2(200) NOT NULL, 
--  show start time
    sh_start_time     DATE NOT NULL, 
--  show end time
    sh_end_time       DATE NOT NULL, 
--  wheelchair accessible or not
    sh_wheelchair_acc NUMBER NOT NULL, 
--  show price
    sh_price          NUMBER(5) NOT NULL, 
--  show type id fk
    shtype_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_show.sh_id IS
    'show ID';

COMMENT ON COLUMN nqz_show.sh_name IS
    'show name';

COMMENT ON COLUMN nqz_show.sh_description IS
    'show description';

COMMENT ON COLUMN nqz_show.sh_start_time IS
    'show start time';

COMMENT ON COLUMN nqz_show.sh_end_time IS
    'show end time';

COMMENT ON COLUMN nqz_show.sh_wheelchair_acc IS
    'wheelchair accessible or not';

COMMENT ON COLUMN nqz_show.sh_price IS
    'show price';

COMMENT ON COLUMN nqz_show.shtype_id IS
    'show type id fk';

ALTER TABLE nqz_show ADD CONSTRAINT nqz_show_pk PRIMARY KEY ( sh_id );

CREATE TABLE nqz_st_mi ( 
--  store id fk
    st_id NUMBER(5) NOT NULL, 
--  menu item id fk
    mi_id NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_st_mi.st_id IS
    'store id fk';

COMMENT ON COLUMN nqz_st_mi.mi_id IS
    'menu item id fk';

ALTER TABLE nqz_st_mi ADD CONSTRAINT nqz_st_mi_pk PRIMARY KEY ( st_id,
                                                                mi_id );

CREATE TABLE nqz_store ( 
--  store ID
    st_id          NUMBER(5) NOT NULL, 
--  store name
    st_name        VARCHAR2(30) NOT NULL, 
--  store description
    st_description VARCHAR2(200) NOT NULL, 
--  category id fk
    ctg_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_store.st_id IS
    'store ID';

COMMENT ON COLUMN nqz_store.st_name IS
    'store name';

COMMENT ON COLUMN nqz_store.st_description IS
    'store description';

COMMENT ON COLUMN nqz_store.ctg_id IS
    'category id fk';

ALTER TABLE nqz_store ADD CONSTRAINT nqz_store_pk PRIMARY KEY ( st_id );

CREATE TABLE nqz_student ( 
--  visitor ID
    v_id       NUMBER(5) NOT NULL, 
--  school name
    stu_school VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN nqz_student.v_id IS
    'visitor ID';

COMMENT ON COLUMN nqz_student.stu_school IS
    'school name';

ALTER TABLE nqz_student ADD CONSTRAINT nqz_student_pk PRIMARY KEY ( v_id );

CREATE TABLE nqz_ticket ( 
--  ticket ID
    tkt_id         NUMBER(5) NOT NULL, 
--  ticket purchased online or onsite
    tkt_online     NUMBER NOT NULL, 
--  visit date
    tkt_visit_date DATE NOT NULL, 
--  ticket original price
    tkt_price      NUMBER(4) NOT NULL, 
--  ticket discount
    tkt_discount   NUMBER(3) NOT NULL, 
--  ticket paid or not
    tkt_ispaid     NUMBER NOT NULL, 
--  ticket type id fk
    tkttype_id     NUMBER(4) NOT NULL
);

COMMENT ON COLUMN nqz_ticket.tkt_id IS
    'ticket ID';

COMMENT ON COLUMN nqz_ticket.tkt_online IS
    'ticket purchased online or onsite';

COMMENT ON COLUMN nqz_ticket.tkt_visit_date IS
    'visit date';

COMMENT ON COLUMN nqz_ticket.tkt_price IS
    'ticket original price';

COMMENT ON COLUMN nqz_ticket.tkt_discount IS
    'ticket discount';

COMMENT ON COLUMN nqz_ticket.tkt_ispaid IS
    'ticket paid or not';

COMMENT ON COLUMN nqz_ticket.tkttype_id IS
    'ticket type id fk';

ALTER TABLE nqz_ticket ADD CONSTRAINT nqz_ticket_pk PRIMARY KEY ( tkt_id );

CREATE TABLE nqz_tkt_att ( 
--  ticket attration join time
    tkt_att_time DATE NOT NULL, 
--  ticket id fk
    tkt_id       NUMBER(5) NOT NULL, 
--  attraction id fk
    att_id       NUMBER(5) NOT NULL
);

COMMENT ON COLUMN nqz_tkt_att.tkt_att_time IS
    'ticket attration join time';

COMMENT ON COLUMN nqz_tkt_att.tkt_id IS
    'ticket id fk';

COMMENT ON COLUMN nqz_tkt_att.att_id IS
    'attraction id fk';

ALTER TABLE nqz_tkt_att
    ADD CONSTRAINT nqz_tkt_att_pk PRIMARY KEY ( tkt_id,
                                                att_id,
                                                tkt_att_time );

CREATE TABLE nqz_tkt_type ( 
--  ticket type ID
    tkttype_id   NUMBER(4) NOT NULL, 
--  ticket type name
    tkttype_name VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN nqz_tkt_type.tkttype_id IS
    'ticket type ID';

COMMENT ON COLUMN nqz_tkt_type.tkttype_name IS
    'ticket type name';

ALTER TABLE nqz_tkt_type ADD CONSTRAINT nqz_tkt_type_pk PRIMARY KEY ( tkttype_id );

CREATE TABLE nqz_visitor ( 
--  visitor ID
    v_id      NUMBER(5) NOT NULL, 
--  first name
    v_fname   VARCHAR2(20) NOT NULL, 
--  middle name
    v_mname   VARCHAR2(20), 
--  last name
    v_lname   VARCHAR2(20) NOT NULL, 
--  street address
    v_stadd   VARCHAR2(50) NOT NULL, 
--  city address
    v_city    VARCHAR2(15) NOT NULL, 
--  state address
    v_state   VARCHAR2(15) NOT NULL, 
--  country from
    v_country VARCHAR2(15) NOT NULL, 
--  email address
    v_email   VARCHAR2(20) NOT NULL, 
--  telephone number
    v_telnum  VARCHAR2(20) NOT NULL, 
--  type can be "M", "S", "I", or "G"
    v_type    VARCHAR2(11) NOT NULL, 
--  birth date
    v_bdate   DATE NOT NULL
);

ALTER TABLE nqz_visitor
    ADD CONSTRAINT ch_inh_nqz_visitor CHECK ( v_type IN ( 'G', 'I', 'M', 'NQZ_VISITOR', 'S' ) );

COMMENT ON COLUMN nqz_visitor.v_id IS
    'visitor ID';

COMMENT ON COLUMN nqz_visitor.v_fname IS
    'first name';

COMMENT ON COLUMN nqz_visitor.v_mname IS
    'middle name';

COMMENT ON COLUMN nqz_visitor.v_lname IS
    'last name';

COMMENT ON COLUMN nqz_visitor.v_stadd IS
    'street address';

COMMENT ON COLUMN nqz_visitor.v_city IS
    'city address';

COMMENT ON COLUMN nqz_visitor.v_state IS
    'state address';

COMMENT ON COLUMN nqz_visitor.v_country IS
    'country from';

COMMENT ON COLUMN nqz_visitor.v_email IS
    'email address';

COMMENT ON COLUMN nqz_visitor.v_telnum IS
    'telephone number';

COMMENT ON COLUMN nqz_visitor.v_type IS
    'type can be "M", "S", "I", or "G"';

COMMENT ON COLUMN nqz_visitor.v_bdate IS
    'birth date';

CREATE INDEX nqz_visitor__idxv1 ON
    nqz_visitor (
        v_id
    ASC );

ALTER TABLE nqz_visitor ADD CONSTRAINT nqz_visitor_pk PRIMARY KEY ( v_id );

ALTER TABLE nqz_acc_role
    ADD CONSTRAINT nqz_acc_role_nqz_account_fk FOREIGN KEY ( acc_id )
        REFERENCES nqz_account ( acc_id );

ALTER TABLE nqz_acc_role
    ADD CONSTRAINT nqz_acc_role_nqz_role_fk FOREIGN KEY ( r_id )
        REFERENCES nqz_role ( r_id );

ALTER TABLE nqz_account
    ADD CONSTRAINT nqz_account_nqz_visitor_fk FOREIGN KEY ( v_id )
        REFERENCES nqz_visitor ( v_id );

ALTER TABLE nqz_attraction
    ADD CONSTRAINT nqz_att_nqz_att_type_fk FOREIGN KEY ( atttype_id )
        REFERENCES nqz_att_type ( atttype_id );

ALTER TABLE nqz_attraction
    ADD CONSTRAINT nqz_att_nqz_ls_fk FOREIGN KEY ( ls_id )
        REFERENCES nqz_location_section ( ls_id );

ALTER TABLE nqz_cash
    ADD CONSTRAINT nqz_cash_nqz_payment_fk FOREIGN KEY ( pay_id )
        REFERENCES nqz_payment ( pay_id );

ALTER TABLE nqz_credit_debit
    ADD CONSTRAINT nqz_cd_nqz_payment_fk FOREIGN KEY ( pay_id )
        REFERENCES nqz_payment ( pay_id );

ALTER TABLE nqz_group
    ADD CONSTRAINT nqz_group_nqz_visitor_fk FOREIGN KEY ( v_id )
        REFERENCES nqz_visitor ( v_id );

ALTER TABLE nqz_individual
    ADD CONSTRAINT nqz_individual_nqz_visitor_fk FOREIGN KEY ( v_id )
        REFERENCES nqz_visitor ( v_id );

ALTER TABLE nqz_member
    ADD CONSTRAINT nqz_member_nqz_visitor_fk FOREIGN KEY ( v_id )
        REFERENCES nqz_visitor ( v_id );

ALTER TABLE nqz_order
    ADD CONSTRAINT nqz_order_nqz_parking_fk FOREIGN KEY ( park_id )
        REFERENCES nqz_parking ( park_id );

ALTER TABLE nqz_order
    ADD CONSTRAINT nqz_order_nqz_payment_fk FOREIGN KEY ( pay_id )
        REFERENCES nqz_payment ( pay_id );

ALTER TABLE nqz_order
    ADD CONSTRAINT nqz_order_nqz_show_fk FOREIGN KEY ( sh_id )
        REFERENCES nqz_show ( sh_id );

ALTER TABLE nqz_order
    ADD CONSTRAINT nqz_order_nqz_st_mi_fk FOREIGN KEY ( st_id,
                                                        mi_id )
        REFERENCES nqz_st_mi ( st_id,
                               mi_id );

ALTER TABLE nqz_order
    ADD CONSTRAINT nqz_order_nqz_ticket_fk FOREIGN KEY ( tkt_id )
        REFERENCES nqz_ticket ( tkt_id );

ALTER TABLE nqz_order
    ADD CONSTRAINT nqz_order_nqz_visitor_fk FOREIGN KEY ( v_id )
        REFERENCES nqz_visitor ( v_id );

ALTER TABLE nqz_parking
    ADD CONSTRAINT nqz_parking_nqz_parking_lot_fk FOREIGN KEY ( pl_id )
        REFERENCES nqz_parking_lot ( pl_id );

ALTER TABLE nqz_show
    ADD CONSTRAINT nqz_show_nqz_sh_type_fk FOREIGN KEY ( shtype_id )
        REFERENCES nqz_sh_type ( shtype_id );

ALTER TABLE nqz_st_mi
    ADD CONSTRAINT nqz_st_mi_nqz_menu_item_fk FOREIGN KEY ( mi_id )
        REFERENCES nqz_menu_item ( mi_id );

ALTER TABLE nqz_st_mi
    ADD CONSTRAINT nqz_st_mi_nqz_store_fk FOREIGN KEY ( st_id )
        REFERENCES nqz_store ( st_id );

ALTER TABLE nqz_store
    ADD CONSTRAINT nqz_store_nqz_category_fk FOREIGN KEY ( ctg_id )
        REFERENCES nqz_category ( ctg_id );

ALTER TABLE nqz_student
    ADD CONSTRAINT nqz_student_nqz_visitor_fk FOREIGN KEY ( v_id )
        REFERENCES nqz_visitor ( v_id );

ALTER TABLE nqz_ticket
    ADD CONSTRAINT nqz_ticket_nqz_tkt_type_fk FOREIGN KEY ( tkttype_id )
        REFERENCES nqz_tkt_type ( tkttype_id );

ALTER TABLE nqz_tkt_att
    ADD CONSTRAINT nqz_tkt_att_nqz_attraction_fk FOREIGN KEY ( att_id )
        REFERENCES nqz_attraction ( att_id );

ALTER TABLE nqz_tkt_att
    ADD CONSTRAINT nqz_tkt_att_nqz_ticket_fk FOREIGN KEY ( tkt_id )
        REFERENCES nqz_ticket ( tkt_id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_nqz_cash BEFORE
    INSERT OR UPDATE OF pay_id ON nqz_cash
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.pay_method
    INTO d
    FROM
        nqz_payment a
    WHERE
        a.pay_id = :new.pay_id;

    IF ( d IS NULL OR d <> 'CA' ) THEN
        raise_application_error(-20223, 'FK NQZ_CASH_NQZ_PAYMENT_FK in Table NQZ_CASH violates Arc constraint on Table NQZ_PAYMENT - discriminator column PAY_METHOD doesn''t have value ''CA'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_nqz_credit_debit BEFORE
    INSERT OR UPDATE OF pay_id ON nqz_credit_debit
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.pay_method
    INTO d
    FROM
        nqz_payment a
    WHERE
        a.pay_id = :new.pay_id;

    IF ( d IS NULL OR d <> 'CD' ) THEN
        raise_application_error(-20223, 'FK NQZ_CD_NQZ_PAYMENT_FK in Table NQZ_CREDIT_DEBIT violates Arc constraint on Table NQZ_PAYMENT - discriminator column PAY_METHOD doesn''t have value ''CD'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_nqz_member BEFORE
    INSERT OR UPDATE OF v_id ON nqz_member
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.v_type
    INTO d
    FROM
        nqz_visitor a
    WHERE
        a.v_id = :new.v_id;

    IF ( d IS NULL OR d <> 'M' ) THEN
        raise_application_error(-20223, 'FK NQZ_MEMBER_NQZ_VISITOR_FK in Table NQZ_MEMBER violates Arc constraint on Table NQZ_VISITOR - discriminator column V_TYPE doesn''t have value ''M'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_nqz_student BEFORE
    INSERT OR UPDATE OF v_id ON nqz_student
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.v_type
    INTO d
    FROM
        nqz_visitor a
    WHERE
        a.v_id = :new.v_id;

    IF ( d IS NULL OR d <> 'S' ) THEN
        raise_application_error(-20223, 'FK NQZ_STUDENT_NQZ_VISITOR_FK in Table NQZ_STUDENT violates Arc constraint on Table NQZ_VISITOR - discriminator column V_TYPE doesn''t have value ''S'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_nqz_group BEFORE
    INSERT OR UPDATE OF v_id ON nqz_group
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.v_type
    INTO d
    FROM
        nqz_visitor a
    WHERE
        a.v_id = :new.v_id;

    IF ( d IS NULL OR d <> 'G' ) THEN
        raise_application_error(-20223, 'FK NQZ_GROUP_NQZ_VISITOR_FK in Table NQZ_GROUP violates Arc constraint on Table NQZ_VISITOR - discriminator column V_TYPE doesn''t have value ''G'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_nqz_individual BEFORE
    INSERT OR UPDATE OF v_id ON nqz_individual
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.v_type
    INTO d
    FROM
        nqz_visitor a
    WHERE
        a.v_id = :new.v_id;

    IF ( d IS NULL OR d <> 'I' ) THEN
        raise_application_error(-20223, 'FK NQZ_INDIVIDUAL_NQZ_VISITOR_FK in Table NQZ_INDIVIDUAL violates Arc constraint on Table NQZ_VISITOR - discriminator column V_TYPE doesn''t have value ''I'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            26
-- CREATE INDEX                             2
-- ALTER TABLE                             53
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
